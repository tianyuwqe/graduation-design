<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xgq.mapper.IJobMapper">


    <resultMap id="baseRequestMap" type="com.xgq.dto.JobDto">
        <id column="id" property="id"/>
        <result column="sub_user_id" property="subUserId"/>
        <result column="repairer_id" property="repairerId"/>
        <result column="job_type" property="jobType"/>
        <result column="job_desc" property="jobDesc"/>
        <result column="status" property="status"/>
        <result column="repairer_reply" property="repairerReply"/>
        <result column="evaluate" property="evaluate"/>
        <result column="evaluate_level" property="evaluateLevel"/>
        <result column="add_id" property="addId"/>
    </resultMap>

    <sql id="baseColumns">
        id,
        sub_user_id,
        repairer_id,
        job_type,
        job_desc,
        status,
        repairer_reply,
        evaluate,
        evaluate_level,
        add_id
    </sql>

    <sql id="allCondition">
        <if test=" jobDto.id !=null and jobDto.id!='' ">
            AND id = #{jobDto.id}
        </if>
        <if test=" jobDto.subUserId !=null and jobDto.subUserId!='' ">
            AND sub_user_id = #{jobDto.subUserId}
        </if>
        <if test=" jobDto.repairerId !=null and jobDto.repairerId!='' ">
            AND repairer_id = #{jobDto.repairerId}
        </if>
        <if test=" jobDto.jobType !=null and jobDto.jobType!='' ">
            AND job_type = #{jobDto.jobType}
        </if>
        <if test=" jobDto.jobDesc !=null and jobDto.jobDesc!='' ">
            AND job_desc = #{jobDto.jobDesc}
        </if>
        <if test=" jobDto.status !=null and jobDto.status!='' ">
            AND status = #{jobDto.status}
        </if>
        <if test=" jobDto.repairerReply !=null and jobDto.repairerReply!='' ">
            AND repairer_reply = #{jobDto.repairerReply}
        </if>
        <if test=" jobDto.evaluate !=null and jobDto.evaluate!='' ">
            AND evaluate = #{jobDto.evaluate}
        </if>
        <if test=" jobDto.evaluateLevel !=null and jobDto.evaluateLevel!='' ">
            AND evaluate_level = #{jobDto.evaluateLevel}
        </if>
        <if test=" jobDto.addId !=null and jobDto.addId!='' ">
            AND add_id = #{jobDto.addId}
        </if>
    </sql>

    <sql id="page">
        <if test="page !=null">
            limit #{page.startNum},#{page.pageSize}
        </if>
    </sql>

    <select id="selectPageList" resultMap="baseRequestMap">
        SELECT
        <include refid="baseColumns"/>
        FROM job
        where 1=1
        <include refid="allCondition"/>
        ORDER BY create_time DESC
        <include refid="page"/>
    </select>

    <select id="selectCount" resultType="int" parameterType="com.xgq.dto.JobDto">
        SELECT count(1)
        FROM job
        where 1=1
        <include refid="allCondition"/>
    </select>


    <select id="selJobNameById" resultType="String" parameterType="Long">
        SELECT job_name
        FROM job_type
        where id = #{id}
    </select>



    <select id="selJobById" resultMap="baseRequestMap" parameterType="Long">
        SELECT
        <include refid="baseColumns"/>
        FROM job
        where id = #{id}
    </select>

    <select id="selSubJob" resultMap="baseRequestMap" parameterType="Long">
        SELECT
        <include refid="baseColumns"/>
        FROM job
        where sub_user_id = #{subId}
    </select>



    <select id="selJobType" resultType="com.xgq.dto.JobTypeDto" >
        SELECT id,job_name as name
        FROM job_type
    </select>


    <update id="updateRepaireIdByJobId" parameterType="Long">
        UPDATE job
        SET repairer_id = #{repaireId},status=1
        where id = #{jobId}
    </update>

    <update id="updateDesc">
        UPDATE job
        SET job_desc = #{desc}
        where id = #{id}
    </update>

    <update id="addEval">
        UPDATE job
        SET evaluate = #{eval}
        where id = #{id}
    </update>


    <update id="addReply">
        UPDATE job
        SET repairer_reply = #{eval}
        where id = #{id}
    </update>

    <update id="over">
        UPDATE job
        SET status = 2
        where id = #{id}
    </update>

    <insert id="addJob" parameterType="com.xgq.dto.JobDto">
        INSERT INTO job
        (sub_user_id,job_type,job_desc,add_id)
        VALUES
        (#{jobDto.subUserId},#{jobDto.jobType},#{jobDto.jobDesc},#{jobDto.addId})
    </insert>

    <!--<update id="updateStatusByUserIds">-->
        <!--UPDATE user-->
        <!--SET user_status = #{stauts}-->
        <!--WHERE id-->
        <!--in-->
        <!--<foreach collection="userIds" index="index" item="item" separator="," open="(" close=")">-->
            <!--#{item}-->
        <!--</foreach>-->
    <!--</update>-->

    <!--<update id="updatPhoneById">-->
        <!--UPDATE user-->
        <!--SET user_phone = #{phone}-->
        <!--WHERE id =#{id}-->
    <!--</update>-->

    <!--<update id="updatePassword">-->
        <!--UPDATE user-->
        <!--SET user_password = #{password}-->
        <!--WHERE id =#{id}-->
    <!--</update>-->

    <!--<select id="getUserByUserId" resultMap="baseRequestMap">-->
        <!--SELECT-->
        <!--<include refid="baseColumns"/>-->
        <!--FROM user-->
        <!--WHERE id = #{id}-->
    <!--</select>-->

    <!--<select id="getUserByUserPhone" resultMap="baseRequestMap">-->
        <!--SELECT-->
        <!--<include refid="baseColumns"/>-->
        <!--FROM user-->
        <!--WHERE user_phone = #{userPhone}-->
    <!--</select>-->


    <!--<insert id="addUser" parameterType="com.xgq.po.UserPo" useGeneratedKeys="true" keyColumn="id" keyProperty="user.userId">-->
        <!--INSERT INTO user-->
        <!--(user_password,user_phone,user_name,user_status)-->
        <!--VALUES (#{user.userPassword},#{user.userPhone},#{user.userName},#{user.userStatus});-->
    <!--</insert>-->


</mapper>
